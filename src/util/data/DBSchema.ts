// Auto-generated by WorkbookSchemaGenerator on 2025-09-16T06:52:53.631Z
// Tables: Requisition, RequisitionItem, RequisitionApproval, Project, ProjectMember, Person, Unit, Role
import { TableDefinition } from "./UniversalRepo";

export interface Requisition {
  id: number;
  name: string;
  createdAt: Date;
  createdBy: number;
  dueDate: Date;
  projectId: number;
  projectName: string;
  requisitionItems: string;
  approvals: string;
  approvedApprovals: string;
  rejectedApprovals: string;
  pendingApproval: string;
}

export const requisitionDef: TableDefinition<Requisition> = {
  columns: {
    id: { type: "number", required: true, final: true },
    name: { type: "string", required: true },
    createdAt: { type: "date", required: true, final: true },
    createdBy: { type: "number", required: true, final: true, referenceTo: "Person" },
    dueDate: { type: "date", required: true, final: true },
    projectId: { type: "number", required: true, final: true, referenceTo: "Project" },
    projectName: { type: "string", required: true, calculated: true, final: true },
    requisitionItems: { type: "string", final: true, referenceTo: "RequisitionItem" },
    approvals: { type: "string", calculated: true, final: true, referenceTo: "Person" },
    approvedApprovals: { type: "string", calculated: true, final: true, referenceTo: "Person" },
    rejectedApprovals: { type: "string", calculated: true, final: true, referenceTo: "Person" },
    pendingApproval: { type: "string", calculated: true, final: true, referenceTo: "Person" }
  },
  names: {
    id: "Id",
    name: "Name",
    createdAt: "CreatedAt",
    createdBy: "CreatedBy",
    dueDate: "DueDate",
    projectId: "ProjectId",
    projectName: "ProjectName",
    requisitionItems: "RequisitionItems",
    approvals: "Approvals",
    approvedApprovals: "ApprovedApprovals",
    rejectedApprovals: "RejectedApprovals",
    pendingApproval: "PendingApproval"
  },
  order: ["id", "name", "createdAt", "createdBy", "dueDate", "projectId", "projectName", "requisitionItems", "approvals", "approvedApprovals", "rejectedApprovals", "pendingApproval"]
};

export interface RequisitionItem {
  id: number;
  productName: string;
  requisitionId: number;
  quantity: number;
  unitId: number;
  unit: string;
  categoryId: number;
  category: string;
  commentInternal: string;
  comment: string;
}

export const requisitionItemDef: TableDefinition<RequisitionItem> = {
  columns: {
    id: { type: "number", required: true, final: true },
    productName: { type: "string", required: true, final: true },
    requisitionId: { type: "number", required: true, final: true, referenceTo: "Requisition" },
    quantity: { type: "number", required: true, final: true },
    unitId: { type: "number", final: true, referenceTo: "Unit" },
    unit: { type: "string", required: true, final: true },
    categoryId: { type: "number", final: true, referenceTo: "Category" },
    category: { type: "string", final: true },
    commentInternal: { type: "string", final: true },
    comment: { type: "string", final: true }
  },
  names: {
    id: "Id",
    productName: "ProductName",
    requisitionId: "RequisitionId",
    quantity: "Quantity",
    unitId: "UnitId",
    unit: "Unit",
    categoryId: "CategoryId",
    category: "Category",
    commentInternal: "CommentInternal",
    comment: "Comment"
  },
  order: ["id", "productName", "requisitionId", "quantity", "unitId", "unit", "categoryId", "category", "commentInternal", "comment"]
};

export interface RequisitionApproval {
  id: number;
  requisitionId: number;
  personId: number;
  personName: string;
  createdAt: Date;
  createdBy: number;
  decisionDate: Date;
  decision: number;
}

export const requisitionApprovalDef: TableDefinition<RequisitionApproval> = {
  columns: {
    id: { type: "number", required: true, final: true },
    requisitionId: { type: "number", required: true, final: true, referenceTo: "Requisition" },
    personId: { type: "number", required: true, final: true, referenceTo: "Person" },
    personName: { type: "string", calculated: true, final: true },
    createdAt: { type: "date", required: true, calculated: true, final: true },
    createdBy: { type: "number", required: true, final: true, referenceTo: "Person" },
    decisionDate: { type: "date", final: true },
    decision: { type: "number", required: true, final: true, default: 0 }
  },
  names: {
    id: "Id",
    requisitionId: "RequisitionId",
    personId: "PersonId",
    personName: "PersonName",
    createdAt: "CreatedAt",
    createdBy: "CreatedBy",
    decisionDate: "DecisionDate",
    decision: "Decision"
  },
  order: ["id", "requisitionId", "personId", "personName", "createdAt", "createdBy", "decisionDate", "decision"]
};

export interface Project {
  id: number;
  name: string;
  createdAt: Date;
  createdBy: number;
}

export const projectDef: TableDefinition<Project> = {
  columns: {
    id: { type: "number", required: true, final: true },
    name: { type: "string" },
    createdAt: { type: "date", calculated: true },
    createdBy: { type: "number", referenceTo: "Person" }
  },
  names: {
    id: "Id",
    name: "Name",
    createdAt: "CreatedAt",
    createdBy: "CreatedBy"
  },
  order: ["id", "name", "createdAt", "createdBy"]
};

export interface ProjectMember {
  id: number;
  projectId: number;
  projectName: string;
  personId: number;
  personName: string;
  createdAt: Date;
  createdBy: number;
  roleId: number;
  roleName: string;
}

export const projectMemberDef: TableDefinition<ProjectMember> = {
  columns: {
    id: { type: "number", required: true, final: true },
    projectId: { type: "number", required: true, referenceTo: "Project" },
    projectName: { type: "string", required: true, calculated: true, referenceTo: "Project" },
    personId: { type: "number", required: true, final: true, referenceTo: "Person" },
    personName: { type: "string", required: true, calculated: true, final: true, referenceTo: "Person" },
    createdAt: { type: "date", calculated: true },
    createdBy: { type: "number" },
    roleId: { type: "number", required: true, referenceTo: "Role" },
    roleName: { type: "string", required: true, calculated: true, final: true }
  },
  names: {
    id: "Id",
    projectId: "ProjectId",
    projectName: "ProjectName",
    personId: "PersonId",
    personName: "PersonName",
    createdAt: "CreatedAt",
    createdBy: "CreatedBy",
    roleId: "RoleId",
    roleName: "RoleName"
  },
  order: ["id", "projectId", "projectName", "personId", "personName", "createdAt", "createdBy", "roleId", "roleName"]
};

export interface Person {
  id: number;
  firstName: string;
  lastName: string;
  fullName: string;
  email: string;
  createdAt: Date;
  createdBy: number;
  isActive: boolean;
}

export const personDef: TableDefinition<Person> = {
  columns: {
    id: { type: "number", required: true, final: true },
    firstName: { type: "string" },
    lastName: { type: "string" },
    fullName: { type: "string", calculated: true },
    email: { type: "string", required: true },
    createdAt: { type: "date" },
    createdBy: { type: "number" },
    isActive: { type: "boolean", default: true }
  },
  names: {
    id: "Id",
    firstName: "FirstName",
    lastName: "LastName",
    fullName: "FullName",
    email: "Email",
    createdAt: "CreatedAt",
    createdBy: "CreatedBy",
    isActive: "IsActive"
  },
  order: ["id", "firstName", "lastName", "fullName", "email", "createdAt", "createdBy", "isActive"]
};

export interface Unit {
  id: number;
  name: string;
  shortName: string;
}

export const unitDef: TableDefinition<Unit> = {
  columns: {
    id: { type: "number", required: true, final: true },
    name: { type: "string", required: true, final: true },
    shortName: { type: "string", required: true, final: true }
  },
  names: {
    id: "Id",
    name: "Name",
    shortName: "ShortName"
  },
  order: ["id", "name", "shortName"]
};

export interface Role {
  id: number;
  roleId: string;
  roleName: string;
}

export const roleDef: TableDefinition<Role> = {
  columns: {
    id: { type: "number", required: true, final: true },
    roleId: { type: "string", required: true, final: true },
    roleName: { type: "string", required: true, final: true }
  },
  names: {
    id: "Id",
    roleId: "RoleId",
    roleName: "RoleName"
  },
  order: ["id", "roleId", "roleName"]
};

export const DB_TABLE_NAME_TO_DEF_MAP = {
  "Requisition": requisitionDef,
  "RequisitionItem": requisitionItemDef,
  "RequisitionApproval": requisitionApprovalDef,
  "Project": projectDef,
  "ProjectMember": projectMemberDef,
  "Person": personDef,
  "Unit": unitDef,
  "Role": roleDef
}
